# Tested on clang-format v14.0.6
# https://clang.llvm.org/docs/ClangFormatStyleOptions.html

# Ignoring a piece of code
#
# http://releases.llvm.org/6.0.1/tools/clang/docs/ClangFormatStyleOptions.html#disabling-formatting-on-a-piece-of-code
# int formatted_code;
# // clang-format off
#     void    unformatted_code  ;
# // clang-format on
# void formatted_code_again;

DisableFormat: false

Language: Cpp
Standard: c++11
ColumnLimit: 120
MaxEmptyLinesToKeep: 3

UseTab: Never # Use `TabWidth` to configure this if this is set to a value other than 'Never'
IndentWidth: 4
PPIndentWidth: 0 # Preprocessor indent width
ConstructorInitializerIndentWidth: 2
ContinuationIndentWidth: 2 # Indent applied when wrapping statements

IndentAccessModifiers: false
IndentCaseBlocks: false
IndentCaseLabels: true
IndentPPDirectives: BeforeHash
IndentWrappedFunctionNames: false
LambdaBodyIndentation: Signature
NamespaceIndentation: All
# InsertBraces: false # only available since clang-format 15 

BreakBeforeBraces: Custom
BraceWrapping:
    AfterCaseLabel: false
    AfterClass: true
    AfterControlStatement: Always
    AfterEnum: true
    AfterFunction: true
    AfterNamespace: true
    AfterStruct: true
    AfterUnion: true
    AfterExternBlock: true
    BeforeCatch: true
    BeforeElse: true
    BeforeLambdaBody: false
    BeforeWhile: false
    IndentBraces: false
    SplitEmptyFunction: false
    SplitEmptyRecord: false
    SplitEmptyNamespace: false
BreakBeforeTernaryOperators: true
BreakBeforeBinaryOperators: All
BreakConstructorInitializers: BeforeColon
BreakInheritanceList: BeforeColon
BreakStringLiterals: false

AlignAfterOpenBracket: true
AlignArrayOfStructures: Right
AlignConsecutiveAssignments: false
AlignConsecutiveBitFields: true
AlignConsecutiveDeclarations: false
AlignConsecutiveMacros: true
AlignEscapedNewlines: Left
AlignOperands: Align
AlignTrailingComments: false

AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: true
AlwaysBreakTemplateDeclarations: Yes

# AllowAllArgumentsOnNextLine: Default Value
# AllowAllParametersOfDeclarationOnNextLine: Default Value
AllowShortBlocksOnASingleLine: Always
AllowShortCaseLabelsOnASingleLine: false
AllowShortEnumsOnASingleLine: true
AllowShortFunctionsOnASingleLine: Inline
AllowShortIfStatementsOnASingleLine: false
AllowShortLambdasOnASingleLine: Inline
AllowShortLoopsOnASingleLine: false

BinPackArguments: true
BinPackParameters: false
PackConstructorInitializers: CurrentLine

AccessModifierOffset: -4
EmptyLineAfterAccessModifier: Leave
EmptyLineBeforeAccessModifier: Always

FixNamespaceComments: true
# IncludeBlocks: Default Value

SeparateDefinitionBlocks: Leave
ReflowComments: false

PointerAlignment: Left
ReferenceAlignment: Left
QualifierAlignment: Leave

SortIncludes: Never
SortUsingDeclarations: true

SpaceAfterCStyleCast: true
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: false
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeCpp11BracedList: true
SpaceBeforeParens: Custom
SpaceBeforeParensOptions:
    AfterControlStatements: true
    AfterFunctionDeclarationName: false
    AfterFunctionDefinitionName: false
    AfterForeachMacros: false
    AfterIfMacros: false
    AfterOverloadedOperator: true
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpacesBeforeTrailingComments: 1
SpaceAroundPointerQualifiers: Both
SpaceInEmptyBlock: false
SpaceInEmptyParentheses: false
SpacesInAngles: Never
SpacesInCStyleCastParentheses: false
SpacesInConditionalStatement: false
SpacesInContainerLiterals: true
SpacesInParentheses: false
SpacesInSquareBrackets: false
# SpacesInLineCommentPrefix: Default Value
BitFieldColonSpacing: Both
Cpp11BracedListStyle: false

NamespaceMacros: []
StatementAttributeLikeMacros: []
StatementMacros: []
TypenameMacros: []
WhitespaceSensitiveMacros: []
AttributeMacros: []
ForEachMacros: []
IfMacros: []